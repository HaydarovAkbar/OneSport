version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./grid/media:/app/grid/media
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    restart: unless-stopped
    networks:
      - onesport-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    networks:
      - onesport-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - onesport-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./grid/media:/app/grid/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - onesport-network

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - ./grid/media:/app/grid/media
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    restart: unless-stopped
    networks:
      - onesport-network

  celery-beat:
    build: .
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./grid/media:/app/grid/media
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    restart: unless-stopped
    networks:
      - onesport-network

  flower:
    build: .
    command: celery -A config flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - celery
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    restart: unless-stopped
    networks:
      - onesport-network

volumes:
  postgres_data:
  redis_data:

networks:
  onesport-network:
    driver: bridge
# Generated by Django 4.2.16 on 2024-11-04 12:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("clients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("recruiters", "0001_initial"),
        ("site_settings", "0003_alter_commissionlevel_options_delete_profileimage"),
    ]

    operations = [
        migrations.CreateModel(
            name="Benefit",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("name", models.CharField(max_length=255)),
                ("icon_name", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CancelReason",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Candidate",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("linkedin", models.CharField(blank=True, max_length=255, null=True)),
                ("profile_photo", models.ImageField(upload_to="profile_photos/")),
                ("original_resume", models.FileField(blank=True, null=True, upload_to="resumes/originals/")),
                ("formatted_resume", models.FileField(blank=True, null=True, upload_to="resumes/formatted/")),
                ("edited_resume", models.FileField(blank=True, null=True, upload_to="resumes/edited/")),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Hire",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("base_salary", models.FloatField()),
                (
                    "payment_status",
                    models.SmallIntegerField(
                        choices=[(0, "Due"), (2, "Paid"), (3, "Refunded"), (4, "Cancelled")], default=0
                    ),
                ),
                ("join_date", models.DateTimeField(blank=True, null=True)),
                ("payout", models.FloatField()),
                ("commission", models.FloatField()),
                ("commission_percentage", models.SmallIntegerField()),
                ("candidate", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.candidate")),
            ],
            options={
                "ordering": ["-join_date"],
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Active"), (1, "Closed"), (2, "Paused"), (3, "Cancelled")], default=0
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("about_company", models.TextField(blank=True, null=True)),
                ("must_haves", models.TextField(blank=True, null=True)),
                ("nice_to_haves", models.TextField(blank=True, null=True)),
                (
                    "job_type",
                    models.SmallIntegerField(choices=[(0, "On-site"), (1, "Remote"), (2, "Hybrid")], default=0),
                ),
                (
                    "position_type",
                    models.SmallIntegerField(choices=[(0, "Full-time"), (1, "Part-time"), (2, "Contract")], default=0),
                ),
                ("visa_sponsorship", models.BooleanField(default=False)),
                ("salary_min", models.IntegerField()),
                ("salary_max", models.IntegerField()),
                ("expected_commission", models.IntegerField(default=0)),
                ("signup_bonus", models.IntegerField(default=0)),
                ("stocks_value", models.IntegerField(default=0)),
                ("commission_percentage", models.SmallIntegerField(default=20)),
                ("top_job", models.BooleanField(default=False)),
                ("book_of_business", models.BooleanField(default=False)),
                ("ideal_resume", models.FileField(blank=True, null=True, upload_to="ideal_resumes/")),
                ("benefits", models.ManyToManyField(related_name="jobs", to="jobs.benefit")),
                (
                    "cancel_reason",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="jobs.cancelreason"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="recruiters.jobcategory"
                    ),
                ),
                ("client", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="clients.client")),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content", models.TextField()),
                ("read_status", models.SmallIntegerField(choices=[(0, "New"), (1, "Read")], default=0)),
                ("edited", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "job",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="jobs.job"
                    ),
                ),
                (
                    "posted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipient_client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="clients.client",
                    ),
                ),
                (
                    "recipient_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Stage",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("name", models.CharField(max_length=255)),
                ("icon_name", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StageLog",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("candidate", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.candidate")),
                (
                    "from_stage",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="from_stage_logs",
                        to="jobs.stage",
                    ),
                ),
                (
                    "to_stage",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="to_stage_logs",
                        to="jobs.stage",
                    ),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RecruiterPayment",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("amount", models.FloatField()),
                ("due_on", models.DateTimeField()),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Pending"), (1, "Paid"), (2, "Due"), (3, "Cancelled")], default=0
                    ),
                ),
                ("percentage_of_full", models.SmallIntegerField()),
                (
                    "currency",
                    models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="site_settings.currency"),
                ),
                ("hire", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.hire")),
            ],
            options={
                "ordering": ["-due_on"],
            },
        ),
        migrations.CreateModel(
            name="RecruiterApplication",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "status",
                    models.SmallIntegerField(choices=[(0, "Pending"), (1, "Approved"), (2, "Rejected")], default=0),
                ),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("job", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.job")),
                (
                    "recruiter",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="recruiters.recruiter"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MessageAttachment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="message_attachments/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="attachments", to="jobs.message"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobAttachment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="job_attachments/")),
                ("job", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.job")),
                (
                    "uploaded_by",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.AddField(
            model_name="job",
            name="languages",
            field=models.ManyToManyField(related_name="jobs", to="jobs.language"),
        ),
        migrations.AddField(
            model_name="job",
            name="location",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="site_settings.address"
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="posted_by",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="InterviewStep",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated")),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("step_title", models.CharField(max_length=255)),
                ("step_description", models.TextField(blank=True, null=True)),
                ("job", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.job")),
            ],
            options={
                "ordering": ["job", "step_title"],
            },
        ),
        migrations.AddField(
            model_name="hire",
            name="job",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="jobs.job"),
        ),
        migrations.AddField(
            model_name="hire",
            name="recruiter",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="recruiters.recruiter"),
        ),
        migrations.AddField(
            model_name="candidate",
            name="job",
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="jobs.job"),
        ),
        migrations.AddField(
            model_name="candidate",
            name="recruiter",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="recruiters.recruiter"
            ),
        ),
        migrations.AddField(
            model_name="candidate",
            name="skills",
            field=models.ManyToManyField(related_name="candidates", to="jobs.skill"),
        ),
        migrations.AddField(
            model_name="candidate",
            name="stage",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="jobs.stage"
            ),
        ),
    ]
